---
import Action from "@/components/Action.astro";
import ThemeToggle from "@/components/ThemeToggle.astro";
import type { HeaderData } from "@/config/landing.interface";

interface Props {
  data?: HeaderData; // ahora opcional
}

const { data } = Astro.props;

// ✅ Valores por defecto si no se pasa `data`
const defaultHeader: HeaderData = {
  logo: "Lunaria Studio",
  links: [
    { label: "Inicio", href: "/" },
    { label: "Servicios", href: "/#services-section" },
    { label: "Planes", href: "/#pricing-section" },
    { label: "Contacto", href: "/#contact-section" },
  ],
};

const headerData = data ?? defaultHeader;
---

<header
  id="navbar"
  class="fixed top-0 w-full z-50 transition-all duration-500 backdrop-blur-xl
         bg-white/20 dark:bg-black/20 border-b border-transparent"
>
  <nav
    aria-label="Main Navigation"
    class="flex items-center justify-between w-full md:w-3/4 mx-auto px-5 h-20 text-black dark:text-white"
  >
    <!-- Logo -->
    <div class="text-xl font-semibold tracking-wide">
      <Action as="a" href="/" class="text-black dark:text-white hover:opacity-80 transition">
        {headerData.logo}
      </Action>
    </div>

    <!-- Links (desktop) -->
    <ul class="hidden md:flex gap-x-10 lg:gap-x-14">
      {headerData.links.map((item) => (
        <li class="text-lg font-medium hover:scale-110 hover:opacity-80 transition-all duration-300">
          <Action as="a" href={item.href} class="text-black dark:text-white">
            {item.label}
          </Action>
        </li>
      ))}
    </ul>

    <!-- Right section -->
    <div class="flex items-center gap-4">
      <ThemeToggle />

      <!-- Botón hamburguesa (solo móvil) -->
      <button
        id="menu-toggle"
        aria-label="Abrir menú"
        class="md:hidden relative flex flex-col justify-between items-center w-10 h-10
               rounded-xl border border-white/40 dark:border-black/40 
               bg-white/30 dark:bg-black/30 backdrop-blur-xl
               transition-all duration-500 hover:scale-110 active:scale-95"
      >
        <span class="block w-6 h-0.5 bg-black dark:bg-white rounded-full transition-all duration-500"></span>
        <span class="block w-6 h-0.5 bg-black dark:bg-white rounded-full transition-all duration-500"></span>
        <span class="block w-6 h-0.5 bg-black dark:bg-white rounded-full transition-all duration-500"></span>
      </button>
    </div>
  </nav>

  <!-- Menú móvil -->
  <div
    id="mobile-menu"
    class="md:hidden fixed top-20 left-0 w-full h-[calc(100vh-5rem)]
           flex flex-col items-center justify-center gap-8 text-xl font-medium
           text-black dark:text-white
           bg-white/30 dark:bg-black/30 backdrop-blur-2xl
           transform -translate-y-full opacity-0 pointer-events-none
           transition-all duration-700 ease-[cubic-bezier(0.68,-0.55,0.27,1.55)]"
  >
    {headerData.links.map((item) => (
      <Action
        as="a"
        href={item.href}
        class="text-2xl hover:text-blue-400 dark:hover:text-pink-400 transition-all duration-300"
      >
        {item.label}
      </Action>
    ))}
  </div>
</header>

<script is:inline>
  const navbar = document.getElementById("navbar");
  const menuToggle = document.getElementById("menu-toggle");
  const mobileMenu = document.getElementById("mobile-menu");
  const bars = menuToggle.querySelectorAll("span");

  // Efecto glass dinámico al hacer scroll
  window.addEventListener("scroll", () => {
    if (window.scrollY >= 20) {
      navbar.classList.add("border-b", "border-white/30", "dark:border-white/10");
      navbar.classList.add("bg-white/40", "dark:bg-black/40");
    } else {
      navbar.classList.remove("border-b", "border-white/30", "dark:border-white/10");
      navbar.classList.remove("bg-white/40", "dark:bg-black/40");
    }
  });

  // Animación hamburguesa + menú
  menuToggle.addEventListener("click", () => {
    const isOpen = menuToggle.classList.toggle("open");

    if (isOpen) {
      bars[0].style.transform = "translateY(8px) rotate(45deg)";
      bars[1].style.opacity = "0";
      bars[2].style.transform = "translateY(-8px) rotate(-45deg)";
      mobileMenu.style.opacity = "1";
      mobileMenu.style.transform = "translateY(0)";
      mobileMenu.style.pointerEvents = "auto";
    } else {
      bars[0].style.transform = "";
      bars[1].style.opacity = "1";
      bars[2].style.transform = "";
      mobileMenu.style.opacity = "0";
      mobileMenu.style.transform = "translateY(-100%)";
      mobileMenu.style.pointerEvents = "none";
    }
  });

  // Cerrar menú al hacer clic en un enlace
  mobileMenu.querySelectorAll("a").forEach((link) => {
    link.addEventListener("click", () => {
      menuToggle.classList.remove("open");
      bars[0].style.transform = "";
      bars[1].style.opacity = "1";
      bars[2].style.transform = "";
      mobileMenu.style.opacity = "0";
      mobileMenu.style.transform = "translateY(-100%)";
      mobileMenu.style.pointerEvents = "none";
    });
  });
</script>
